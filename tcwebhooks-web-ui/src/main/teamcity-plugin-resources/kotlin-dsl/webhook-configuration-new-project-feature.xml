<?xml version="1.0" encoding="UTF-8"?>
<dsl-extension kind="projectFeature" type="tcWebHook"
	generateDslJar="true">

	<class name="WebHookConfigurationReallyNew">
		<description>
			A description of a class.
		</description>
	</class>

	<function name="webHookConfigurationReallyNew">
		<description>
			A description of a called function.
		</description>
	</function>

	<params>
		<param name="webHookId" type="string" mandatory="true">
			<description>
				WebHook Id. Must be unique across the whole of teamcity.
				Suggestion: use a
				name like 'ProjectIdentifier_WebHook_01'
			</description>
		</param>
		<param name="url" type="string" mandatory="true">
			<description>
				WebHook URL. The URL to which the webhook will be
				POST'd.
			</description>
		</param>
		<param name="template" type="string" mandatory="true">
			<description>
				The templateId referring to the template this webhook
				will use.
			</description>
		</param>
		<param name="authentication" dslName="authentication"
			type="compound">
			<description>Authentication type to use</description>
			<option name="bearer" value="bearer">
				<param name="bearerToken" dslName="token" mandatory="true">
					<description>
						Bearer token to use for Bearer Authentication
					</description>
				</param>
				<param name="bearerPreemptive" dslName="preemptive"
					mandatory="false" type="boolean">
					<description>
						Whether to enable pre-emptive authentication (defaults
						to true). Without pre-emptive enabled, the webhook will get a 401
						and then re-send the request with authentication enabled.
					</description>
				</param>
			</option>
			<option name="basic" value="basicAuth">
				<param name="basicAuthUsername" dslName="username"
					mandatory="false">
					<description>
						Username for Basic Authentication
					</description>
				</param>
				<param name="basicAuthPassword" dslName="password"
					mandatory="false">
					<description>
						Password for Basic Authentication
					</description>
				</param>
				<param name="basicAuthRealm" dslName="realm" mandatory="false">
					<description>
						Realm to use for Basic Authentication
					</description>
				</param>
				<param name="basicAuthPreemptive" dslName="preemptive"
					mandatory="false" type="boolean">
					<description>
						Whether to enable pre-emptive authentication (defaults
						to true). Without pre-emptive enabled, the webhook will get a 401
						and then re-send the request with authentication enabled.
					</description>
				</param>
			</option>
		</param>
		<param name="buildTypes" dslName="buildTypes" type="compound"
			mandatory="true">
			<description>
				Specifies to which system a status should be published
			</description>
			<option name="allProjectBuilds" value="allProjectBuilds">
				<description>
					Publish status to Bitbucket Cloud
				</description>
				<param name="subProjectBuilds" dslName="subProjectBuilds"
					type="boolean">
					<description>
						A flag to instruct the webhook to run against all
						builds in sub-projects of this
						project.
					</description>
				</param>
			</option>
			<option name="selectedProjectBuilds"
				value="selectedProjectBuilds">
				<param name="subProjectBuilds" dslName="subProjectBuilds"
					type="boolean">
					<description>
						A flag to instruct the webhook to run against all
						builds in sub-projects of this
						project.
					</description>
				</param>
				<param name="buildTypeIds" dslName="buildTypeIds"
					type="string" mandatory="true">
					<description>
						Comma separated list of buildTypeIds for which this
						webhook should
						trigger.
					</description>
				</param>
			</option>
		</param>
		<param name="buildStates" dslName="buildStates" type="compound"
			mandatory="true">
			<description>
				The build states for which this webhook should trigger.
			</description>
			<option name="enabledBuildStates" value="enabledBuildStates">
				<description>
					Pass in the build states required. Any omitted build
					states will default to disabled.
				</description>
				<param name="buildAddedToQueue" dslName="buildAddedToQueue"
					type="boolean" trueValue="enabled" falseValue="disabled">
					<description>
						Trigger this webhook when the build is added to the
						queue.
					</description>
				</param>
				<param name="buildRemovedFromQueue"
					dslName="buildRemovedFromQueue" type="boolean" trueValue="enabled"
					falseValue="disabled">
					<description>
						Trigger this webhook when the build is removed from
						the queue by a user.
					</description>
				</param>
			</option>
		</param>
		<param name="buildType" mandatory="false" ref="BUILD_TYPE">
			<description>
				Build Type references for which this webhook should
				run.
			</description>
		</param>
	</params>

</dsl-extension>